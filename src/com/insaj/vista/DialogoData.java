/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.insaj.vista;

import com.insaj.controlador.AulasController;
import com.insaj.controlador.DocentesController;
import com.insaj.controlador.HorariosController;
import com.insaj.controlador.HorasController;
import com.insaj.controlador.MateriasController;
import com.insaj.controlador.SeccionesController;
import com.insaj.entidades.Aulas;
import com.insaj.entidades.Docentes;
import com.insaj.entidades.Horas;
import com.insaj.entidades.Materias;
import com.insaj.entidades.Secciones;
import java.util.List;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Luis
 */
public class DialogoData extends javax.swing.JFrame {

    MateriasController matcontrol = new MateriasController();
    AulasController aucontrol = new AulasController();
    DocentesController docencontrol = new DocentesController();
    HorariosController horControl = new HorariosController();
    HorasController horascontroles = new HorasController();
    SeccionesController seccionesControler = new SeccionesController();
    public DialogoData() {
        initComponents();
        List<Materias> listMat = matcontrol.executeHQLQuery("from Materias");
        List<Aulas> listAula = aucontrol.executeHQLQuery("from Aulas");
        List<Docentes> listaDocen = docencontrol.executeHQLQuery("from Docentes");
        List<Horas> listaHoras = horControl.executeHQLQuery("from Horas");
        List<Secciones> listaSecciones = seccionesControler.executeHQLQuery("from Secciones");
        
        DefaultMutableTreeNode datos = new DefaultMutableTreeNode("DATOS");
        DefaultTreeModel modelo = new DefaultTreeModel(datos);
        
        DefaultMutableTreeNode docentes = new DefaultMutableTreeNode("DOCENTES");
        modelo.insertNodeInto(docentes, datos, 0);
        for(int i =0;i<listaDocen.size();i++){
           modelo.insertNodeInto(new DefaultMutableTreeNode(listaDocen.get(i).toString()), docentes,i);
        }

        DefaultMutableTreeNode materias = new DefaultMutableTreeNode("MATERIAS");
        modelo.insertNodeInto(materias, datos, 1);
        for(int i =0;i<listMat.size();i++){
           modelo.insertNodeInto(new DefaultMutableTreeNode(listMat.get(i).getNombre()), materias,i);
        }
        
        DefaultMutableTreeNode aulas = new DefaultMutableTreeNode("AULAS");
        modelo.insertNodeInto(aulas, datos, 2);
        for(int i =0;i<listAula.size();i++){
           modelo.insertNodeInto(new DefaultMutableTreeNode(listAula.get(i).getNumero()), aulas,i);
        }
        DefaultMutableTreeNode secciones = new DefaultMutableTreeNode("SECCIONES");
        modelo.insertNodeInto(secciones, datos, 3);
        for(int i =0;i<listaSecciones.size();i++){
           modelo.insertNodeInto(new DefaultMutableTreeNode(listaSecciones.get(i).toString()), secciones,i);
        }
     
       jTree1.setModel(modelo);
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DialogoData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
